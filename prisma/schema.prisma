generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id    Int            @id @default(autoincrement())
  name  String         @unique
  users UsersOnRoles[]
}

model User {
  id        String         @id
  email     String         @unique
  createdAt DateTime       @default(now())
  gender    String?        @default("na")
  phone     String?
  photo     String?
  updatedAt DateTime       @updatedAt
  name      String
  birthday  DateTime?
  roles     UsersOnRoles[]
}

model UsersOnRoles {
  userId     String
  roleId     Int
  assignedAt DateTime @default(now())
  role       Role     @relation(fields: [roleId], references: [id])
  user       User     @relation(fields: [userId], references: [id])

  @@id([userId, roleId])
}

model ProductPhoto {
  id        Int     @id @default(autoincrement())
  url       String
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model Product {
  id             Int            @id @default(autoincrement())
  name           String
  descripcion    String
  loteId         Int
  lote           Lote           @relation(fields: [loteId], references: [id])
  photos         ProductPhoto[]
  precio         Float          @default(0.0)
  fechaMolido    DateTime?
  fechaCaducidad DateTime?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @default(now()) @updatedAt
}

model Lote {
  id           Int       @id @default(autoincrement())
  pesoCafe     Float
  tipoTueste   String
  fechaTostado DateTime
  fechaLote    DateTime
  cafeId       Int
  cafe         Cafe      @relation(fields: [cafeId], references: [id])
  products     Product[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @default(now()) @updatedAt
}

model Cafe {
  id               Int      @id @default(autoincrement())
  nombre           String
  origen           String
  finca            String
  productor        String
  cantidad         Float
  proceso          String
  notasOlfativas   String
  lotes            Lote[]
  precioGranoVerde Float    @default(0.0)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now()) @updatedAt
}
